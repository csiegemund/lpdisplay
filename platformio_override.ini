; ***  PlatformIO Project Configuration Override File   ***
; ***  Changes done here override settings in platformio.ini    ***

[env]
build_flags = 
; Specify display settings here:

; No display connected (for debug purposes):

;    -D DISP_WIDTH=128
;    -D DISP_HEIGHT=64
;    -D DISP_INTERFACE=NO_IF

; OLED 2.42' SSD1306 I2C:

;    -D DISP_WIDTH=128
;    -D DISP_HEIGHT=64
;    -D DISP_ROTATION=U8G2_R0
;    -D DISP_CONTROLLER=SSD1309
;    -D DISP_BRAND=NONAME0
;    -D DISP_INTERFACE=I2C

; OLED 2.42' SSD1306 SPI:

   -D DISP_WIDTH=128
   -D DISP_HEIGHT=64
   -D DISP_ROTATION=U8G2_R0
   -D DISP_CONTROLLER=SSD1309
   -D DISP_BRAND=NONAME0
   -D DISP_INTERFACE=SPI_4W

; OLED 2.08' GME25664-65 SPI:

;    -D DISP_WIDTH=256
;    -D DISP_HEIGHT=64
;    -D DISP_ROTATION=U8G2_R0
;    -D DISP_CONTROLLER=SH1122
;    -D DISP_INTERFACE=SPI_4W

; OLED 0.96' GME 12864-42 I2C:

;    -D DISP_WIDTH=128
;    -D DISP_HEIGHT=64
;    -D DISP_ROTATION=U8G2_R0
;    -D DISP_CONTROLLER=SSD1306
;    -D DISP_BRAND=NONAME
;    -D INTERFACE=I2C

; LCD 2,42' GMG12864-06D

;    -D DISP_WIDTH=256
;    -D DISP_HEIGHT=64
;    -D DISP_ROTATION=U8G2_R0
;    -D DISP_CUSTOM=ST7567_OS12864
;    -D DISP_INTERFACE=SPI_4W


; Brightness of OLED Display when Arylic board LEDs are ON or OFF
    -D LED_ON_BRIGHTNESS=255
    -D LED_OFF_BRIGHTNESS=20


; Duration (in ms) to show value and status changes
    -D SHOW_VALUE_TIME=3000
    -D SHOW_STATUS_TIME=1500


; Serial debugging settings for function debugOut()
; (works only when if your board has a second UART,  
;  otherwise this settings doesn't have any effect).
;
; < - Mirror incoming data from Arylic UART (\74)
; > - Mirror outgoing data to Arylic UART   (\76)
; ! - Standard messages
; # - Very frequent messages
; * - All messages
; (you can use any char you like as selector in debugOut...)

;    -D "DEBUG_FILTER=\"\74\76\""  ;Show UART data only
    -D "DEBUG_FILTER=\"\74\76!\""  ;Show UART + ! data
;    -D "DEBUG_FILTER=\"*\""       ;Show all debug data
;    -U DEBUG_FILTER               ;Disables serial debugging



; you can define your personal board settings here:

[env:ArduinoNanoEvery]
build_flags = ${env.build_flags}
; SPI extra PIN settings
    -D SPI_CS=8
    -D SPI_DC=9
    -D SPI_RS=10
; I2C extra PIN settings
    -D I2C_RS=U8X8_PIN_NONE 


[env:ATtiny3217]
platform = atmelmegaavr
board = ATtiny3217
upload_protocol = custom
upload_speed = 230400
upload_port = COM8

;settings for a serialUPDI programmer:
;(the formatting below MUST be exact like this!)
upload_flags = 
	-p
	$BOARD_MCU
	-P
	$UPLOAD_PORT
	-b
	$UPLOAD_SPEED
upload_command = "$PROJECT_CORE_DIR\packages\tool-avrdude\avrdude.exe"  -c serialupdi $UPLOAD_FLAGS -e -U flash:w:$SOURCE:a

build_flags = ${env.build_flags}
; SPI extra PIN settings
    -D SPI_CS=0
    -D SPI_DC=16
    -D SPI_RS=15
; I2C extra PIN settings
    -D I2C_RS=U8X8_PIN_NONE 

